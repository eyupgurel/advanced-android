apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'groovyx.android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "com.alienstar.cyrus.advancedandroid"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.alienstar.cyrus.advancedandroid.test.CustomTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    def recyclerview_version = "1.0.0"

    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:$recyclerview_version"

    implementation 'com.google.android.material:material:1.0.0'

    implementation 'androidx.cardview:cardview:1.0.0'

    implementation project(":poweradapter")

    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion"
    implementation "com.squareup.moshi:moshi:$rootProject.moshiVersion"
    annotationProcessor "com.ryanharter.auto.value:auto-value-moshi:$rootProject.autoValueMoshiVersion"
    compileOnly "com.ryanharter.auto.value:auto-value-moshi-annotations:$rootProject.autoValueMoshiVersion"

    compileOnly "com.google.auto.value:auto-value:$rootProject.autoValueVersion"
    annotationProcessor "com.google.auto.value:auto-value:$rootProject.autoValueVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "com.jakewharton.rxrelay2:rxrelay:$rootProject.rxRelayVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rootProject.rxBindingVersion"

    implementation "com.jakewharton.threetenabp:threetenabp:$rootProject.threeTenAbpVersion"
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"
    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    implementation 'com.bluelinelabs:conductor:3.0.0-rc1'

// If you want the components that go along with
// Android's support libraries (currently just a PagerAdapter):
    implementation 'com.bluelinelabs:conductor-support:3.0.0-rc1'

// If you want RxJava lifecycle support:
    implementation 'com.bluelinelabs:conductor-rxlifecycle:3.0.0-rc1'

// If you want RxJava2 lifecycle support:
    implementation 'com.bluelinelabs:conductor-rxlifecycle2:3.0.0-rc1'

// If you want RxJava2 Autodispose support:
    implementation 'com.bluelinelabs:conductor-autodispose:3.0.0-rc1'

// If you want Controllers that are Lifecycle-aware (architecture components):
    implementation 'com.bluelinelabs:conductor-archlifecycle:3.0.0-rc1'

    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    implementation 'androidx.room:room-runtime:2.2.1'
    implementation 'androidx.room:room-rxjava2:2.2.1'
    annotationProcessor 'androidx.room:room-compiler:2.2.1'




    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"

    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.testRunnerVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'org.mockito:mockito-junit-jupiter:3.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'



}

def mockCopySpec = copySpec {
    from rootProject.file('app/')
    include 'mock/'
}

task copyMock(type: Copy){
    ['src/debug/assets', 'src/test/resources', 'src/androidTest/resources'].each { dest ->
        copy {
            with mockCopySpec
            into dest
        }
    }
}

build.finalizedBy(copyMock)
repositories {
    mavenCentral()
}

